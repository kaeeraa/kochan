# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Build, test and lint

on:
  schedule:
    - cron: 0 0 * * 0

  pull_request:

  workflow_dispatch:

jobs:
  build:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --with=dev

      - name: Sort with isort
        run: |
          poetry run "isort" "."
      - name: Format with black
        run: |
          poetry run "black" "."
      - name: Lint with flake8
        run: |
          poetry run "flake8" "."
      - name: Lint with pylint
        run: |
          poetry run "pylint" "."

      - name: Setup git
        uses: actions4git/setup-git@v1

      - name: Commit and push changes
        # Main project python version is 3.12
        if: ${{ matrix.python-version == 3.12 }}
        run: |
          if git diff-index --quiet HEAD --; then
              echo "Git repo is clean."
          else
              echo "Git repo is dirty. Pushing..."
              git add .
              git commit -m "refactor: CI code refactoring"
              git push
          fi

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12", "3.13"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install poetry
          poetry install --with=dev
      - name: Test with pytest
        run: |
          poetry run "pytest" "."
